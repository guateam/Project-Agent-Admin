{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\babel-loader\\lib\\index.js!D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\store\\modules\\d2admin\\modules\\account.js","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\store\\modules\\d2admin\\modules\\account.js","mtime":1547280287707},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Project-Agent-Admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\Project-Agent-Admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport util from '@/libs/util.js';\nimport { AccountLogin } from '@/api/sys/login';\nexport default {\n  namespaced: true,\n  actions: {\n    /**\n     * @description 登录\n     * @param {Object} param context\n     * @param {Object} param vm {Object} vue 实例\n     * @param {Object} param username {String} 用户账号\n     * @param {Object} param password {String} 密码\n     * @param {Object} param route {Object} 登录成功后定向的路由对象\n     */\n    login: function login(_ref, _ref2) {\n      var dispatch = _ref.dispatch;\n      var vm = _ref2.vm,\n          username = _ref2.username,\n          password = _ref2.password,\n          _ref2$route = _ref2.route,\n          route = _ref2$route === void 0 ? {\n        name: 'index'\n      } : _ref2$route;\n      // 开始请求登录接口\n      AccountLogin({\n        username: username,\n        password: password\n      }).then(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(res) {\n          var path;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // 设置 cookie 一定要存 uuid 和 token 两个 cookie\n                  // 整个系统依赖这两个数据进行校验和存储\n                  // uuid 是用户身份唯一标识 用户注册的时候确定 并且不可改变 不可重复\n                  // token 代表用户当前登录状态 建议在网络请求中携带 token\n                  // 如有必要 token 需要定时更新，默认保存一天\n                  util.cookies.set('uuid', res.uuid);\n                  util.cookies.set('token', res.token); // 设置 vuex 用户信息\n\n                  _context.next = 4;\n                  return dispatch('d2admin/user/set', {\n                    name: res.name\n                  }, {\n                    root: true\n                  });\n\n                case 4:\n                  _context.next = 6;\n                  return dispatch('load');\n\n                case 6:\n                  // 更新路由 尝试去获取 cookie 里保存的需要重定向的页面完整地址\n                  path = util.cookies.get('redirect'); // 根据是否存有重定向页面判断如何重定向\n\n                  vm.$router.replace(path ? {\n                    path: path\n                  } : route); // 删除 cookie 中保存的重定向页面\n\n                  util.cookies.remove('redirect');\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (err) {\n        console.log('err: ', err);\n      });\n    },\n\n    /**\n     * @description 注销用户并返回登录页面\n     * @param {Object} param context\n     * @param {Object} param vm {Object} vue 实例\n     * @param {Object} param confirm {Boolean} 是否需要确认\n     */\n    logout: function logout(_ref4, _ref5) {\n      var commit = _ref4.commit;\n      var vm = _ref5.vm,\n          _ref5$confirm = _ref5.confirm,\n          confirm = _ref5$confirm === void 0 ? false : _ref5$confirm;\n\n      /**\n       * @description 注销\n       */\n      function logout() {\n        // 删除cookie\n        util.cookies.remove('token');\n        util.cookies.remove('uuid'); // 跳转路由\n\n        vm.$router.push({\n          name: 'login'\n        });\n      } // 判断是否需要确认\n\n\n      if (confirm) {\n        commit('d2admin/gray/set', true, {\n          root: true\n        });\n        vm.$confirm('注销当前账户吗?  打开的标签页和用户设置将会被保存。', '确认操作', {\n          confirmButtonText: '确定注销',\n          cancelButtonText: '放弃',\n          type: 'warning'\n        }).then(function () {\n          commit('d2admin/gray/set', false, {\n            root: true\n          });\n          logout();\n        }).catch(function () {\n          commit('d2admin/gray/set', false, {\n            root: true\n          });\n          vm.$message('放弃注销用户');\n        });\n      } else {\n        logout();\n      }\n    },\n\n    /**\n     * @description 用户登录后从持久化数据加载一系列的设置\n     * @param {Object} state vuex state\n     */\n    load: function load(_ref6) {\n      var commit = _ref6.commit,\n          dispatch = _ref6.dispatch;\n      return new _Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref7 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(resolve) {\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return dispatch('d2admin/user/load', null, {\n                    root: true\n                  });\n\n                case 2:\n                  _context2.next = 4;\n                  return dispatch('d2admin/theme/load', null, {\n                    root: true\n                  });\n\n                case 4:\n                  _context2.next = 6;\n                  return dispatch('d2admin/transition/load', null, {\n                    root: true\n                  });\n\n                case 6:\n                  _context2.next = 8;\n                  return dispatch('d2admin/page/openedLoad', null, {\n                    root: true\n                  });\n\n                case 8:\n                  _context2.next = 10;\n                  return dispatch('d2admin/menu/asideCollapseLoad', null, {\n                    root: true\n                  });\n\n                case 10:\n                  _context2.next = 12;\n                  return dispatch('d2admin/size/load', null, {\n                    root: true\n                  });\n\n                case 12:\n                  // end\n                  resolve();\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x2) {\n          return _ref7.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\store\\modules\\d2admin\\modules\\account.js"],"names":["util","AccountLogin","namespaced","actions","login","dispatch","vm","username","password","route","name","then","res","cookies","set","uuid","token","root","path","get","$router","replace","remove","catch","err","console","log","logout","commit","confirm","push","$confirm","confirmButtonText","cancelButtonText","type","$message","load","resolve"],"mappings":"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","sourcesContent":["import util from '@/libs/util.js'\nimport { AccountLogin } from '@/api/sys/login'\n\nexport default {\n  namespaced: true,\n  actions: {\n    /**\n     * @description 登录\n     * @param {Object} param context\n     * @param {Object} param vm {Object} vue 实例\n     * @param {Object} param username {String} 用户账号\n     * @param {Object} param password {String} 密码\n     * @param {Object} param route {Object} 登录成功后定向的路由对象\n     */\n    login ({ dispatch }, {\n      vm,\n      username,\n      password,\n      route = {\n        name: 'index'\n      }\n    }) {\n      // 开始请求登录接口\n      AccountLogin({\n        username,\n        password\n      })\n        .then(async res => {\n          // 设置 cookie 一定要存 uuid 和 token 两个 cookie\n          // 整个系统依赖这两个数据进行校验和存储\n          // uuid 是用户身份唯一标识 用户注册的时候确定 并且不可改变 不可重复\n          // token 代表用户当前登录状态 建议在网络请求中携带 token\n          // 如有必要 token 需要定时更新，默认保存一天\n          util.cookies.set('uuid', res.uuid)\n          util.cookies.set('token', res.token)\n          // 设置 vuex 用户信息\n          await dispatch('d2admin/user/set', {\n            name: res.name\n          }, { root: true })\n          // 用户登录后从持久化数据加载一系列的设置\n          await dispatch('load')\n          // 更新路由 尝试去获取 cookie 里保存的需要重定向的页面完整地址\n          const path = util.cookies.get('redirect')\n          // 根据是否存有重定向页面判断如何重定向\n          vm.$router.replace(path ? { path } : route)\n          // 删除 cookie 中保存的重定向页面\n          util.cookies.remove('redirect')\n        })\n        .catch(err => {\n          console.log('err: ', err)\n        })\n    },\n    /**\n     * @description 注销用户并返回登录页面\n     * @param {Object} param context\n     * @param {Object} param vm {Object} vue 实例\n     * @param {Object} param confirm {Boolean} 是否需要确认\n     */\n    logout ({ commit }, { vm, confirm = false }) {\n      /**\n       * @description 注销\n       */\n      function logout () {\n        // 删除cookie\n        util.cookies.remove('token')\n        util.cookies.remove('uuid')\n        // 跳转路由\n        vm.$router.push({\n          name: 'login'\n        })\n      }\n      // 判断是否需要确认\n      if (confirm) {\n        commit('d2admin/gray/set', true, { root: true })\n        vm.$confirm('注销当前账户吗?  打开的标签页和用户设置将会被保存。', '确认操作', {\n          confirmButtonText: '确定注销',\n          cancelButtonText: '放弃',\n          type: 'warning'\n        })\n          .then(() => {\n            commit('d2admin/gray/set', false, { root: true })\n            logout()\n          })\n          .catch(() => {\n            commit('d2admin/gray/set', false, { root: true })\n            vm.$message('放弃注销用户')\n          })\n      } else {\n        logout()\n      }\n    },\n    /**\n     * @description 用户登录后从持久化数据加载一系列的设置\n     * @param {Object} state vuex state\n     */\n    load ({ commit, dispatch }) {\n      return new Promise(async resolve => {\n        // DB -> store 加载用户名\n        await dispatch('d2admin/user/load', null, { root: true })\n        // DB -> store 加载主题\n        await dispatch('d2admin/theme/load', null, { root: true })\n        // DB -> store 加载页面过渡效果设置\n        await dispatch('d2admin/transition/load', null, { root: true })\n        // DB -> store 持久化数据加载上次退出时的多页列表\n        await dispatch('d2admin/page/openedLoad', null, { root: true })\n        // DB -> store 持久化数据加载侧边栏折叠状态\n        await dispatch('d2admin/menu/asideCollapseLoad', null, { root: true })\n        // DB -> store 持久化数据加载全局尺寸\n        await dispatch('d2admin/size/load', null, { root: true })\n        // end\n        resolve()\n      })\n    }\n  }\n}\n"]}]}