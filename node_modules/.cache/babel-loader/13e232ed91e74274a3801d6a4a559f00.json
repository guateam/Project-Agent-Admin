{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\babel-loader\\lib\\index.js!D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\routerConfig.js","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\routerConfig.js","mtime":1547729914951},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547717212861},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1547717208828},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\eslint-loader\\index.js","mtime":1547717230935}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n/* eslint-disable */\n// 工具\nimport util from '@/libs/util.ice'; // 页面和布局\n\nimport Index from './pages/Index';\nimport Login from './pages/Login';\nimport Error404 from './pages/Error404';\nimport User from './pages/user';\nimport Company from './pages/company';\nimport Verified from './pages/verified';\nimport Log from './pages/log';\nimport Notice from './pages/notice';\nimport Report from './pages/report';\nimport Article from './pages/article';\nimport Answer from './pages/answer';\nimport Question from './pages/question';\nimport HeaderAside from './layouts/HeaderAside'; // 变量名 routerConfig 为 iceworks 检测关键字\n// ice 会自动在这个变量下添加路由数据\n// 请不要修改名称\n// 备注 ice 自动添加的路由记录是以下格式\n// {\n//   path: '/page4',\n//   layout: d2LayoutMain,\n//   component: 4\n// }\n// 如果不指定 name 字段，会根据 path 生成 name = page-demo1\n// 转换规则见 util.recursiveRouterConfig 中 path2name 方法\n// meta 字段会和默认值使用 Object.assign 合并\n// 如果不指定 meta.name 的话，name 字段会使用和上面路由 name 一样的取值逻辑\n// 下面两个页面就是对比 你可以分别观察两个页面上显示的路由数据差异\n\nvar routerConfig = [// 刷新页面 必须保留\n{\n  path: '/refresh',\n  name: 'refresh',\n  layout: HeaderAside,\n  hidden: true,\n  component: {\n    beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n      next(function (vm) {\n        return vm.$router.replace(from.fullPath);\n      });\n    },\n    render: function render(h) {\n      return h();\n    }\n  }\n}, // 页面重定向 必须保留\n{\n  path: '/redirect/:route*',\n  name: 'redirect',\n  layout: HeaderAside,\n  hidden: true,\n  component: {\n    beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n      next(function (vm) {\n        return vm.$router.replace(JSON.parse(from.params.route));\n      });\n    },\n    render: function render(h) {\n      return h();\n    }\n  }\n}, // 首页 必须 name:index\n{\n  path: '/',\n  name: 'index',\n  layout: HeaderAside,\n  component: Index\n}, {\n  path: '/user',\n  layout: HeaderAside,\n  component: User,\n  meta: {\n    title: '从业者管理'\n  }\n}, {\n  path: '/company',\n  layout: HeaderAside,\n  component: Company,\n  meta: {\n    title: '企业账号'\n  }\n}, {\n  path: '/verified',\n  layout: HeaderAside,\n  component: Verified,\n  meta: {\n    title: '实名认证'\n  }\n}, {\n  path: '/question',\n  layout: HeaderAside,\n  component: Question,\n  meta: {\n    title: '问题审核'\n  }\n}, {\n  path: '/answer',\n  layout: HeaderAside,\n  component: Answer,\n  meta: {\n    title: '回答审核'\n  }\n}, {\n  path: '/article',\n  layout: HeaderAside,\n  component: Article,\n  meta: {\n    title: '文章审核'\n  }\n}, {\n  path: '/report',\n  layout: HeaderAside,\n  component: Report,\n  meta: {\n    title: '举报审核'\n  }\n}, {\n  path: '/notice',\n  layout: HeaderAside,\n  component: Notice,\n  meta: {\n    title: '通知发布'\n  }\n}, {\n  path: '/log',\n  layout: HeaderAside,\n  component: Log,\n  meta: {\n    title: '系统日志'\n  }\n}]; // 不参与菜单显示的\n// ice 不会处理这部分\n// 但是这部分路由也会被注册\n// 处理规则同 routerConfig\n\nvar routerConfigMenuOut = [// 登录\n{\n  path: '/login',\n  name: 'login',\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n}, // 404\n{\n  path: '*',\n  component: Error404\n}]; // 导出全部路由设置\n// 这个数据会在 router.js 中被扁平处理\n\nexport default util.recursiveRouterConfig([].concat(routerConfig, routerConfigMenuOut)); // 导出参与多标签页处理的路由设置\n// 这个数据会在 mian.js 中使用\n\nexport var frameInRoutes = util.recursiveRouterConfig(routerConfig).map(function (e) {\n  var route = e.children ? e.children[0] : e;\n  return {\n    path: e.path,\n    name: route.name,\n    hidden: route.hidden,\n    meta: route.meta\n  };\n});",{"version":3,"sources":["D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\routerConfig.js"],"names":["util","Index","Login","Error404","User","Company","Verified","Log","Notice","Report","Article","Answer","Question","HeaderAside","routerConfig","path","name","layout","hidden","component","beforeRouteEnter","to","from","next","vm","$router","replace","fullPath","render","h","JSON","parse","params","route","meta","title","routerConfigMenuOut","requiresAuth","recursiveRouterConfig","frameInRoutes","map","e","children"],"mappings":"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","sourcesContent":["/* eslint-disable */\n// 工具\nimport util from '@/libs/util.ice'; // 页面和布局\n\nimport Index from './pages/Index';\nimport Login from './pages/Login';\nimport Error404 from './pages/Error404';\nimport User from './pages/user';\nimport Company from './pages/company';\nimport Verified from './pages/verified';\nimport Log from './pages/log';\nimport Notice from './pages/notice';\nimport Report from './pages/report';\nimport Article from './pages/article';\nimport Answer from './pages/answer';\nimport Question from './pages/question';\n\nimport HeaderAside from './layouts/HeaderAside'; // 变量名 routerConfig 为 iceworks 检测关键字\n// ice 会自动在这个变量下添加路由数据\n// 请不要修改名称\n// 备注 ice 自动添加的路由记录是以下格式\n// {\n//   path: '/page4',\n//   layout: d2LayoutMain,\n//   component: 4\n// }\n// 如果不指定 name 字段，会根据 path 生成 name = page-demo1\n// 转换规则见 util.recursiveRouterConfig 中 path2name 方法\n// meta 字段会和默认值使用 Object.assign 合并\n// 如果不指定 meta.name 的话，name 字段会使用和上面路由 name 一样的取值逻辑\n// 下面两个页面就是对比 你可以分别观察两个页面上显示的路由数据差异\n\nconst routerConfig = [\n  // 刷新页面 必须保留\n  {\n    path: '/refresh',\n    name: 'refresh',\n    layout: HeaderAside,\n    hidden: true,\n    component: {\n      beforeRouteEnter(to, from, next) {\n        next(vm => vm.$router.replace(from.fullPath));\n      },\n\n      render: h => h(),\n    },\n  }, // 页面重定向 必须保留\n  {\n    path: '/redirect/:route*',\n    name: 'redirect',\n    layout: HeaderAside,\n    hidden: true,\n    component: {\n      beforeRouteEnter(to, from, next) {\n        next(vm => vm.$router.replace(JSON.parse(from.params.route)));\n      },\n\n      render: h => h(),\n    },\n  },\n  // 首页 必须 name:index\n  {\n    path: '/',\n    name: 'index',\n    layout: HeaderAside,\n    component: Index,\n  },\n  {\n    path: '/user',\n    layout: HeaderAside,\n    component: User,\n    meta: {\n      title: '从业者管理',\n    }\n  },\n  {\n    path: '/company',\n    layout: HeaderAside,\n    component: Company,\n    meta: {\n      title: '企业账号',\n    }\n  },\n  {\n    path: '/verified',\n    layout: HeaderAside,\n    component: Verified,\n    meta: {\n      title: '实名认证',\n    }\n  },\n  {\n    path: '/question',\n    layout: HeaderAside,\n    component: Question,\n    meta: {\n      title: '问题审核',\n    }\n  },\n  {\n    path: '/answer',\n    layout: HeaderAside,\n    component: Answer,\n    meta: {\n      title: '回答审核',\n    }\n  },\n  {\n    path: '/article',\n    layout: HeaderAside,\n    component: Article,\n    meta: {\n      title: '文章审核',\n    }\n  },\n  {\n    path: '/report',\n    layout: HeaderAside,\n    component: Report,\n    meta: {\n      title: '举报审核',\n    }\n  },\n  {\n    path: '/notice',\n    layout: HeaderAside,\n    component: Notice,\n    meta: {\n      title: '通知发布',\n    }\n  },\n  {\n    path: '/log',\n    layout: HeaderAside,\n    component: Log,\n    meta: {\n      title: '系统日志',\n    }\n  },\n]; // 不参与菜单显示的\n// ice 不会处理这部分\n// 但是这部分路由也会被注册\n// 处理规则同 routerConfig\n\nconst routerConfigMenuOut = [\n  // 登录\n  {\n    path: '/login',\n    name: 'login',\n    component: Login,\n    meta: {\n      requiresAuth: false,\n    },\n  }, // 404\n  {\n    path: '*',\n    component: Error404,\n  },\n]; // 导出全部路由设置\n// 这个数据会在 router.js 中被扁平处理\n\nexport default util.recursiveRouterConfig([\n  ...routerConfig,\n  ...routerConfigMenuOut,\n]); // 导出参与多标签页处理的路由设置\n// 这个数据会在 mian.js 中使用\n\nexport const frameInRoutes = util.recursiveRouterConfig(routerConfig).map(e => {\n  const route = e.children ? e.children[0] : e;\n  return {\n    path: e.path,\n    name: route.name,\n    hidden: route.hidden,\n    meta: route.meta,\n  };\n});\n"]}]}