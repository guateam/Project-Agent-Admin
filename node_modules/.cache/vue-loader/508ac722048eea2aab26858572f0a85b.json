{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\layouts\\HeaderAside\\components\\tabs\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\src\\layouts\\HeaderAside\\components\\tabs\\index.vue","mtime":1547729631526},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547717212861},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1547717208828},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1547717212861},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\Project-Agent-Admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1547717286390}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState, mapActions } from 'vuex'\r\nexport default {\r\n  components: {\r\n    D2Contextmenu: () => import('../contextmenu'),\r\n    D2ContextmenuList: () => import('../contextmenu/components/contentmenuList')\r\n  },\r\n  data () {\r\n    return {\r\n      contextmenuFlag: false,\r\n      contentmenuX: 0,\r\n      contentmenuY: 0,\r\n      contextmenuListIndex: [\r\n        { icon: 'times-circle', title: '关闭全部', value: 'all' }\r\n      ],\r\n      contextmenuList: [\r\n        { icon: 'arrow-left', title: '关闭左侧', value: 'left' },\r\n        { icon: 'arrow-right', title: '关闭右侧', value: 'right' },\r\n        { icon: 'times', title: '关闭其它', value: 'other' },\r\n        { icon: 'times-circle', title: '关闭全部', value: 'all' }\r\n      ],\r\n      tagName: 'index'\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState('d2admin/page', [\r\n      'opened',\r\n      'current'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions('d2admin/page', [\r\n      'close',\r\n      'closeLeft',\r\n      'closeRight',\r\n      'closeOther',\r\n      'closeAll'\r\n    ]),\r\n    /**\r\n     * @description 右键菜单功能点击\r\n     */\r\n    handleContextmenu (event) {\r\n      let target = event.target\r\n      // 解决 https://github.com/d2-projects/d2-admin/issues/54\r\n      let flag = false\r\n      if (target.className.indexOf('el-tabs__item') > -1) flag = true\r\n      else if (target.parentNode.className.indexOf('el-tabs__item') > -1) {\r\n        target = target.parentNode\r\n        flag = true\r\n      }\r\n      if (flag) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        this.contentmenuX = event.clientX\r\n        this.contentmenuY = event.clientY\r\n        this.tagName = target.getAttribute('aria-controls').slice(5)\r\n        this.contextmenuFlag = true\r\n      }\r\n    },\r\n    /**\r\n     * @description 右键菜单的row-click事件\r\n     */\r\n    contextmenuClick (command) {\r\n      this.handleControlItemClick(command, this.tagName)\r\n    },\r\n    /**\r\n     * @description 接收点击关闭控制上选项的事件\r\n     */\r\n    handleControlItemClick (command, tagName = null) {\r\n      if (tagName) {\r\n        this.contextmenuFlag = false\r\n      }\r\n      const params = {\r\n        pageSelect: tagName,\r\n        vm: this\r\n      }\r\n      switch (command) {\r\n        case 'left':\r\n          this.closeLeft(params)\r\n          break\r\n        case 'right':\r\n          this.closeRight(params)\r\n          break\r\n        case 'other':\r\n          this.closeOther(params)\r\n          break\r\n        case 'all':\r\n          this.closeAll(this)\r\n          break\r\n        default:\r\n          this.$message.error('无效的操作')\r\n          break\r\n      }\r\n    },\r\n    /**\r\n     * @description 接收点击关闭控制上按钮的事件\r\n     */\r\n    handleControlBtnClick () {\r\n      this.closeAll(this)\r\n    },\r\n    /**\r\n     * @description 接收点击 tab 标签的事件\r\n     */\r\n    handleClick (tab, event) {\r\n      // 找到点击的页面在 tag 列表里是哪个\r\n      const page = this.opened.find(page => page.name === tab.name)\r\n      const { name, params, query } = page\r\n      if (page) {\r\n        this.$router.push({ name, params, query })\r\n      }\r\n    },\r\n    /**\r\n     * @description 点击 tab 上的删除按钮触发这里 首页的删除按钮已经隐藏 因此这里不用判断是 index\r\n     */\r\n    handleTabsEdit (tagName, action) {\r\n      if (action === 'remove') {\r\n        this.close({\r\n          tagName,\r\n          vm: this\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src\\layouts\\HeaderAside\\components\\tabs","sourcesContent":["<template>\r\n  <div class=\"d2-multiple-page-control-group\" flex>\r\n    <div class=\"d2-multiple-page-control-content\" flex-box=\"1\">\r\n      <div class=\"d2-multiple-page-control-content-inner\">\r\n        <d2-contextmenu\r\n          :visible.sync=\"contextmenuFlag\"\r\n          :x=\"contentmenuX\"\r\n          :y=\"contentmenuY\">\r\n          <d2-contextmenu-list\r\n            :menulist=\"tagName === 'index' ? contextmenuListIndex : contextmenuList\"\r\n            @rowClick=\"contextmenuClick\"/>\r\n        </d2-contextmenu>\r\n        <el-tabs\r\n          class=\"d2-multiple-page-control\"\r\n          :value=\"current\"\r\n          type=\"card\"\r\n          :closable=\"true\"\r\n          @tab-click=\"handleClick\"\r\n          @edit=\"handleTabsEdit\"\r\n          @contextmenu.native=\"handleContextmenu\">\r\n          <el-tab-pane\r\n            v-for=\"(page, index) in opened\"\r\n            :key=\"index\"\r\n            :label=\"page.meta.title || '未命名'\"\r\n            :name=\"page.name\"/>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"d2-multiple-page-control-btn\"\r\n      flex-box=\"0\">\r\n      <el-dropdown\r\n        size=\"default\"\r\n        split-button\r\n        @click=\"handleControlBtnClick\"\r\n        @command=\"command => handleControlItemClick(command)\">\r\n        <d2-icon name=\"times-circle\"/>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item command=\"left\">\r\n            <d2-icon name=\"arrow-left\" class=\"d2-mr-10\"/>\r\n            关闭左侧\r\n          </el-dropdown-item>\r\n          <el-dropdown-item command=\"right\">\r\n            <d2-icon name=\"arrow-right\" class=\"d2-mr-10\"/>\r\n            关闭右侧\r\n          </el-dropdown-item>\r\n          <el-dropdown-item command=\"other\">\r\n            <d2-icon name=\"times\" class=\"d2-mr-10\"/>\r\n            关闭其它\r\n          </el-dropdown-item>\r\n          <el-dropdown-item command=\"all\">\r\n            <d2-icon name=\"times-circle\" class=\"d2-mr-10\"/>\r\n            全部关闭\r\n          </el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nexport default {\r\n  components: {\r\n    D2Contextmenu: () => import('../contextmenu'),\r\n    D2ContextmenuList: () => import('../contextmenu/components/contentmenuList')\r\n  },\r\n  data () {\r\n    return {\r\n      contextmenuFlag: false,\r\n      contentmenuX: 0,\r\n      contentmenuY: 0,\r\n      contextmenuListIndex: [\r\n        { icon: 'times-circle', title: '关闭全部', value: 'all' }\r\n      ],\r\n      contextmenuList: [\r\n        { icon: 'arrow-left', title: '关闭左侧', value: 'left' },\r\n        { icon: 'arrow-right', title: '关闭右侧', value: 'right' },\r\n        { icon: 'times', title: '关闭其它', value: 'other' },\r\n        { icon: 'times-circle', title: '关闭全部', value: 'all' }\r\n      ],\r\n      tagName: 'index'\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState('d2admin/page', [\r\n      'opened',\r\n      'current'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapActions('d2admin/page', [\r\n      'close',\r\n      'closeLeft',\r\n      'closeRight',\r\n      'closeOther',\r\n      'closeAll'\r\n    ]),\r\n    /**\r\n     * @description 右键菜单功能点击\r\n     */\r\n    handleContextmenu (event) {\r\n      let target = event.target\r\n      // 解决 https://github.com/d2-projects/d2-admin/issues/54\r\n      let flag = false\r\n      if (target.className.indexOf('el-tabs__item') > -1) flag = true\r\n      else if (target.parentNode.className.indexOf('el-tabs__item') > -1) {\r\n        target = target.parentNode\r\n        flag = true\r\n      }\r\n      if (flag) {\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        this.contentmenuX = event.clientX\r\n        this.contentmenuY = event.clientY\r\n        this.tagName = target.getAttribute('aria-controls').slice(5)\r\n        this.contextmenuFlag = true\r\n      }\r\n    },\r\n    /**\r\n     * @description 右键菜单的row-click事件\r\n     */\r\n    contextmenuClick (command) {\r\n      this.handleControlItemClick(command, this.tagName)\r\n    },\r\n    /**\r\n     * @description 接收点击关闭控制上选项的事件\r\n     */\r\n    handleControlItemClick (command, tagName = null) {\r\n      if (tagName) {\r\n        this.contextmenuFlag = false\r\n      }\r\n      const params = {\r\n        pageSelect: tagName,\r\n        vm: this\r\n      }\r\n      switch (command) {\r\n        case 'left':\r\n          this.closeLeft(params)\r\n          break\r\n        case 'right':\r\n          this.closeRight(params)\r\n          break\r\n        case 'other':\r\n          this.closeOther(params)\r\n          break\r\n        case 'all':\r\n          this.closeAll(this)\r\n          break\r\n        default:\r\n          this.$message.error('无效的操作')\r\n          break\r\n      }\r\n    },\r\n    /**\r\n     * @description 接收点击关闭控制上按钮的事件\r\n     */\r\n    handleControlBtnClick () {\r\n      this.closeAll(this)\r\n    },\r\n    /**\r\n     * @description 接收点击 tab 标签的事件\r\n     */\r\n    handleClick (tab, event) {\r\n      // 找到点击的页面在 tag 列表里是哪个\r\n      const page = this.opened.find(page => page.name === tab.name)\r\n      const { name, params, query } = page\r\n      if (page) {\r\n        this.$router.push({ name, params, query })\r\n      }\r\n    },\r\n    /**\r\n     * @description 点击 tab 上的删除按钮触发这里 首页的删除按钮已经隐藏 因此这里不用判断是 index\r\n     */\r\n    handleTabsEdit (tagName, action) {\r\n      if (action === 'remove') {\r\n        this.close({\r\n          tagName,\r\n          vm: this\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}